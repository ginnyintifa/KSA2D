!(node %in% cyto_edge$source)& node %in% cyto_edge$target ~ "substrate"))%>%
dplyr::rename(id = node)%>%
dplyr::mutate(prot_fc = case_when(annot == "substrate" ~ -0.000001,
T ~ prot_fc))%>%
dplyr::mutate(prot_sig = case_when(annot == "substrate" ~ F,
T ~ prot_sig))%>%
replace(is.na(.), 0)%>%
dplyr::mutate(all_data_site = case_when(annot == "kinase" ~ 0,
T ~ all_data_site))%>%
dplyr::mutate(sig_data_site = case_when(annot == "kinase" ~ 0,
T ~ sig_data_site))%>%
dplyr::mutate(withSigsite = case_when(sig_data_site>0 ~ T,
T ~F))
write.table(cyto_edge, paste0(output_dir, output_label, "_edge.tsv"),
quote = F, row.names = F, sep = "\t")
write.table(cyto_node, paste0(output_dir, output_label, "_node.tsv"),
quote = F, row.names = F, sep = "\t")
}
all_node = fread("/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/allPath_node_table.tsv",
stringsAsFactors = F)
all_edge = fread("/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/allPath_edge_table.tsv",
stringsAsFactors = F)
make_cytoscape_bothPos(node  = all_node,
edge = all_edge,
output_dir ="/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/",
output_label = "all_20210204")
sigPair_bothPos_all_edge = fread("/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/all_20210204_edge.tsv",
stringsAsFactors = F, data.table = F)
#### add the insulin pathways
add_pair_bothPos = sigPair_bothPos_all_edge%>%
dplyr::mutate(insPair = case_when(source%in%ins_gn & target%in%ins_gn ~ T,
T~ F))
write.table(add_pair_bothPos, "/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/all_add_sigPair_bothPos_20210204_edge.tsv",
quote = F, row.names = F, sep = "\t")
all_node5 = fread("/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/allPath_5_5_node_table.tsv",
stringsAsFactors = F)
all_edge5 = fread("/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/allPath_5_5_edge_table.tsv",
stringsAsFactors = F)
make_cytoscape_bothPos(node  = all_node5,
edge = all_edge5,
output_dir ="/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/",
output_label = "all_5_5_20210204")
sigPair_bothPos_all_edge5 = fread("/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/all_5_5_20210204_edge.tsv",
stringsAsFactors = F, data.table = F)
#### add the insulin pathways
add_pair_bothPos5 = sigPair_bothPos_all_edge5%>%
dplyr::mutate(insPair = case_when(source%in%ins_gn & target%in%ins_gn ~ T,
T~ F))
write.table(add_pair_bothPos5, "/Users/Ginny/Google Drive/IR_proteomics/EbData/eachPathwayCyto_20210204/all_add_sigPair_bothPos_5_5_20210204_edge.tsv",
quote = F, row.names = F, sep = "\t")
setwd("/Users/ginny/Google Drive/KSA2D_github")
setwd("/Users/ginny/Google Drive/KSA2D_github/KSA2D")
document()
library(devtools)
library(roxygen2)
document()
18*5
53760/12
View(sigPair_all_edge30)
cor
?cor
2712/8013
plot(x = 1, y = 1, col = "#800000FF")
plot(x = 1, y = 1, col = "#80FF0000")
plot(x = 1, y = 1, col = "#FF0000")
plot(x = 1, y = 1, col = "#00FF00")
plot(x = 1, y = 1, col = "#0000FF")
plot(x = 1, y = 1, col = "#800000FF")
plot(x = 1, y = 1, col = "#0000FF")
plot(x = 1, y = 1, col = "#4D0000FF")
plot(x = 1, y = 1, col = "#1A0000FF")
plot(x = 1, y = 1, col = "#1A0000")
plot(x = 1, y = 1, col = "#000000")
plot(x = 1, y = 1, col = "#000000")
plot(x = 1, y = 1, col = rgb(0,0,225, alpha = 100))
plot(x = 1, y = 1, col = rgb(0,0,1, alpha = 100))
plot(x = 1, y = 1, col = rgb(0,0,1, alpha = 0.5))
log2(1.2)
10718+994
log2(1.1)
?rnorm
x1 = abs(rnorm(10))
x2 = abs(rnorm(10))
y1 = abs(rnorm(10))+1
y2 = abs(rnorm(10))+1
boxplot(x1,x2, y1, y2)
d = matrix(0, 10, 4)
d = matrix(0, 10, 4)
d[,1] = x1
d[,2] = x2
d[,3] = y1
d[,4] = y2
colMed = apply(d,2,median)
colMed
d_med = sweep(d, 1, colMed)
d_med = sweep(d, 2, colMed)
d_med
boxplot(d)
boxplot(d_med)
d_med = sweep(d, 2, colMed) +median(colMed)
boxplot(d_med)
x_ave = mean(x1,x2)
x_ave = apply(d[,c(1,2)],1,mean)
x_ave
y_ave = apply(d[,c(3,4)],1,mean)
y_ave
cbind(x_ave, y_ave)
xy_ave = apply(cbind(x_ave,y_ave), 1, mean)
xy_ave
x_ave
y_ave
xf = xy_ave/x_ave
yf = xy_ave/y_ave
xf
yf
xf = x_ave-xy_ave
yf = y_ave-xy_ave
c(1,2)
c(1,2)*c(2,4)
d_IRS = d
d_IRS[,c(1,2)] = sweep(d[,c(1,2)],1,xf)
d_IRS[,c(3,4)] = sweep(d[,c(3,4)],1,yf)
boxplot(d_IRS)
boxplot(d)
colMed_IRS = apply(d_IRS,2,median)
colMed_IRS = apply(d_IRS,2,median)
d_IRS_med = sweep(d_IRS, 2, colMed_IRS) + median(colMed_IRS)
boxplot(d_IRS_med)
boxplot(d_med)
d_med[1,]
d_IRS_med[1,]
d_IRS_med[10,]
d_med[10,]
colMed_IRS
colMed
d_IRS[1,]
d[1,]
d[1,1]-d[1,2]
d_IRS[1,1]-d_IRS[1,2]
median(d[,1])
median(d[,2])
median(d_IRS[,1])
median(d_IRS[,2])
boxplot(d[,c(1,2)])
boxplot(d_IRS[,c(1,2)])
d[,1]
d_IRS[,1]
2^0.46
sample_size =10
set1 = c(1:sample_size)
set2 = c(1:sample_size)
combn(set1, sample_size/2)
it = combn(set1, sample_size/2)
dim(it)
it[,1]
it[,2]
it[,3]
63*4
set1_sel = floor(sample_size/2)
set2_sel = sample_size-set1_sel
set1_sel
set2_sel
s1 = combn(set1, set1_sel)
s1[,1]
s1_comp = apply(s1,2,setdiff(set1,x))
s1_comp = apply(s1,2,function(x) setdiff(set1,x))
s1_comp[,1]
s1[,1]
s1[,10]
s1_comp[,10]
s1 = combn(set1, set1_sel)
s1_comp = apply(s1,2,function(x) setdiff(set1,x))
s2 = combn(set2, set2_sel)
s2_comp = apply(s2,2,function(x) setdiff(set2,x))
s1[,1]
s2[,1]
s1_comp[,1]
s2_comp[,1]
s1 = combn(set1, set1_sel)
s1_comp = apply(s1,2,function(x) setdiff(set1,x))
set.seed(seeds[1])
s1 = s1[,sample(ncol(s1))]
set.seed(seeds[1])
s1_comp = s1_comp[,sample(ncol(s1_comp))]
seeds = c(123,1332)
s1 = combn(set1, set1_sel)
s1_comp = apply(s1,2,function(x) setdiff(set1,x))
set.seed(seeds[1])
s1 = s1[,sample(ncol(s1))]
set.seed(seeds[1])
s1_comp = s1_comp[,sample(ncol(s1_comp))]
s1[.1]
s1[,1]
s1_compl[,1]
s1_comp[,1]
s1 = combn(set1, set1_sel)
set.seed(seeds[1])
s1 = s1[,sample(ncol(s1))]
s1_comp = apply(s1,2,function(x) setdiff(set1,x))
s1[,10]
s1_comp[,10]
s2 = combn(set2, set2_sel)
set.seed(seeds[2])
s2 = s2[,sample(ncol(s2))]
s2_comp = apply(s2,2,function(x) setdiff(set2,x))
s2[,10]
s2_comp[,10]
perm_list = list(s1, s1_comp, s2, s2_comp)
dim(s1)
set = c(1:sample_size)
set_sel = floor(sample_size/2)
sel = combn(set, set_sel)
sel_comp = apply(sel,2,function(x) setdiff(set,x))
sel[,1]
sel_comp[,1]
sel_comp[,10]
sel[,10]
nc = c(1:ncol(sel))
choose_set = combn(nc,2)
choose_set
dim(choose_set)
choose_set[,1]
choose_set[,2]
choose_set[,3]
choose_set[,8]
nc = c(1:ncol(sel))
choose_set = combn(nc,2)
choose_set = choose_set[, sample(ncol(choose_set))]
set.seed(seeds[1])
choose_set = choose_set[, sample(ncol(choose_set))]
nc = c(1:ncol(sel))
choose_set = combn(nc,2)
set.seed(seeds[1])
choose_set = choose_set[, sample(ncol(choose_set))]
choose_set[,1]
choose_set[,2]
nc = c(1:ncol(sel))
choose_set = combn(nc,2)
set.seed(seeds[1])
choose_set = choose_set[1:numPermu, sample(ncol(choose_set))]
numPermu = 500
#### choose 2 from the sel
nc = c(1:ncol(sel))
choose_set = combn(nc,2)
set.seed(seeds[1])
choose_set = choose_set[1:numPermu, sample(ncol(choose_set))]
sample(ncol(choose_set))
choose_set[,1]
nc = c(1:ncol(sel))
choose_set = combn(nc,2)
set.seed(seeds[1])
choose_set = choose_set[, sample(ncol(choose_set))]
find_set = choose_set[,1:numPermu]
find_set[,1]
dim(find_set)
find_set
t = t(find_set)
tt == unqiue(t)
tt = unqiue(t)
tt = unique(t)
dim(tt)
sel[1,]
sel[,1]
find_set[.1]
find_set[,1]
s1_ind = sel[,find_set[1,]]
s1_ind
sel[,1]
sel[,2]
s1 = matrix(numPermu, set_sel,0)
s1_comp = matrix(numPermu, (sample_size-set_sel),0)
s2 = matrix(numPermu, set_sel,0)
s2_comp = matrix(numPermu, (sample_size-set_sel),0)
s1
s1 = matrix(0,numPermu, set_sel)
s1
s1_comp = matrix(0,numPermu, (sample_size-set_sel))
s2 = matrix(0,numPermu, set_sel)
s2_comp = matrix(0,numPermu, (sample_size-set_sel))
i = 10
s1[i,] = sel[,find_set[1,i]]
s1_comp[i,] = sel_comp[,find_set[1,i]]
s2[i,] = sel[,find_set[2,i]]
s2_comp[i,] = sel_comp[,find_set[2,i]]
s1[10,]
s1_comp[10,]
s2_comp[10,]
s2[10,]
combn(c(1:permute_times),permute_times/2)
?combin
?combn
2^0.5
2^0.6
q1 = fread("/Users/Ginny/Google Drive/IR_proteomics/prmQuantTable1_20210323.tsv",
stringsAsFactors = F, data.table = F)
q2 = fread("/Users/Ginny/Google Drive/IR_proteomics/prmQuantTable2_20210323.tsv",
stringsAsFactors = F, data.table = F)
dim(q1)
dim(q2)
q1[1,]
boxplot(log2(q1[,-c(1:3)]))
q1[q1==0] = NA
q1[1,]
q1[2,]
q1[3,]
q2[q2==0] = NA
boxplot(log2(q1[,-c(1:3)]))
boxplot(log2(q1[,-c(1:4)]))
boxplot(log2(q2[,-c(1:4)]))
q12= q1%>%
dplyr::full_join(q2, by = "filename")
dim(q12)
dim(q1)
dim(q2)
it1 = q1$filename
it2 = q2$filename
it1[1,]
it1[1]
intersect(it1, it2)
it1
q12= rbind(q1, q2)
old1 = colnames(q1)[-c(1:4)]
old1
old2 = colnames(q2)[-c(1:4)]
old2
nn = gsub("20210305_JW_Insulin_","",old1)
nn
nn = gsub("_S1","",nn)
nn = gsub(".mzML","",nn)
nn
colnames(q1)[-c(1:4)] = nn
colnames(q2)[-c(1:4)] = nn
colnames(q1)
colnames(q2)
q12= rbind(q1, q2)
dim(q12)
q12[1,]
boxplot(log2(q12[,-c(1:4)]))
col_0min = grep(colnames(q12), "_0min")
col_5min = grep(colnames(q12), "_5min")
col_30min = grep(colnames(q12), "_30min")
col_0min = grep("_0min",colnames(q12),)
col_5min = grep("_5min",colnames(q12),)
col_30min = grep("_30min",colnames(q12),)
col_30min = grep("_30min",colnames(q12))
col_0min = grep("_0min",colnames(q12))
col_5min = grep("_5min",colnames(q12))
col_0min
col_30min
col_5min
boxplot(log2(q12[,-c(1:4)]))
nn
race_id = data.frame(id = c("Sample200","Sample252",
"Sample31", "Sample45",
"Sample79", "Sample87"),
grp = c("SL","SL","CO","CL","CO","CL"),
stringsAsFactors = F)
grp_id = data.frame(id = c("Sample200","Sample252",
"Sample31", "Sample45",
"Sample79", "Sample87"),
grp = c("SL","SL","CO","CL","CO","CL"),
stringsAsFactors = F)
grp_id
q12[1,]
###### calculate all group first
fc_5 = log2(q12[,col_5min])-log2(q12[,col_0min])
fc_5[1,]
q12[,col_5min]
q12[,col_5min][1.]
q12[,col_5min][1,]
q12[,col_0min][1,]
co_id = grp_id$id[which(grp_id$grp == "CO")]
cl_id = grp_id$id[which(grp_id$grp == "CL")]
sl_id = grp_id$id[which(grp_id$grp == "SL")]
co_id
cl_id
sl_id
co_col = grep(co_id[1],colnames(q12))
co_col
cl_col = c(grep(cl_id[1],colnames(q12)),grep(cl_id[2],colnames(q12)))
sl_col = c(grep(sl_id[1],colnames(q12)),grep(sl_id[2],colnames(q12)))
co_col
sl_col
cl_col
co_col
co_col = c(grep(co_id[1],colnames(q12)),grep(co_id[2],colnames(q12)))
co_col
q12_sort = cbind(q12[,c(1:4)], q12[,co_col], q12[,cl_col], q12[, sl_col])
q12_sort[1,]
col_0min = grep("_0min",colnames(q12_sort))
col_5min = grep("_5min",colnames(q12_sort))
col_30min = grep("_30min",colnames(q12_sort))
###### calculate all group first
fc_5 = log2(q12[,col_5min])-log2(q12[,col_0min])
fc_5[1,]
###### calculate all group first
fc_5 = rowMeans(log2(q12[,col_5min])-log2(q12[,col_0min]),  na.rm = T)
fc_30 = rowMeans(log2(q12[,col_30min])-log2(q12[,col_0min]),  na.rm = T)
fc_5[1,]
fc_5[1]
result_q12 = cbind(q12_sort[,c(1:4)], fc_5, fc_30)
resullt_q12[1,]
result_q12[1,]
result_q12[2,]
result_q12[3,]
table(result_q12$fc_5>0)
table(result_q30$fc_5>0)
table(result_q12$fc_30>0)
q12$filename
fname = unlist(lapply(1:nrow(q12_sort), function(x) {
this_name = unlist(strsplit(q12_sort$filename[x]), split = "_")[1]
return(this_name)
}))
fname = unlist(lapply(1:nrow(q12_sort), function(x) {
this_name = unlist(strsplit(q12_sort$filename[x], split = "_"))[1]
return(this_name)
}))
fname
it = fname
length(unique(it))
result_q12 = cbind(fname, fc_5, fc_30)
result_q12 = cbind(fname, fc_5, fc_30)%>%
dplyr::group_by(fname)%>%
dplyr::summarise_if(is.numeric,mean, na.rm = T)
result_q12 = data.frame(fname, fc_5, fc_30)%>%
dplyr::group_by(fname)%>%
dplyr::summarise_if(is.numeric,mean, na.rm = T)
result_q12[1,]
result_q12[2,]
table(result_q12$fc_5>0)
table(result_q12$fc_30>0)
boxplot(result_q12$fc_5, result_q12$fc_30)
fc_5 = rowMeans(log2(q12_sort[,col_5min])-log2(q12_sort[,col_0min]),  na.rm = T)
fc_30 = rowMeans(log2(q12_sort[,col_30min])-log2(q12_sort[,col_0min]),  na.rm = T)
fname = unlist(lapply(1:nrow(q12_sort), function(x) {
this_name = unlist(strsplit(q12_sort$filename[x], split = "_"))[1]
return(this_name)
}))
result_q12 = data.frame(fname, fc_5, fc_30)%>%
dplyr::group_by(fname)%>%
dplyr::summarise_if(is.numeric,mean, na.rm = T)
boxplot(result_q12$fc_5, result_q12$fc_30)
abline(h =0 )
boxplot(result_q12$fc_5, result_q12$fc_30)
abline(h =0 )
table(result_q12$fc_30>0)
table(result_q12$fc_5>0)
quantile(result_q12$fc_5)
quantile(result_q12$fc_30)
boxplot(q12_sort[,-c(1:4)])
boxplot(log2(q12_sort[,-c(1:4)]))
boxplot(log2(q12_sort[,-c(1:4)]), las = 2)
boxplot(log2(q12_sort[,-c(1:4)]), las = 2)
fca_5 = rowMeans(log2(q12_sort[,col_5min])-log2(q12_sort[,col_0min]),  na.rm = T)
fca_30 = rowMeans(log2(q12_sort[,col_30min])-log2(q12_sort[,col_0min]),  na.rm = T)
result_q12a = data.frame(fname, fca_5, fca_30)%>%
dplyr::group_by(fname)%>%
dplyr::summarise_if(is.numeric,mean, na.rm = T)
boxplot(result_q12a[,-1])
abline(h =0 )
fca_5 = log2(q12_sort[,col_5min])-log2(q12_sort[,col_0min])
fca_30 =log2(q12_sort[,col_30min])-log2(q12_sort[,col_0min])
result_q12a = data.frame(fname, fca_5, fca_30)%>%
dplyr::group_by(fname)%>%
dplyr::summarise_if(is.numeric,mean, na.rm = T)
boxplot(result_q12a[,-1])
abline(h =0 )
boxplot(result_q12a[,-1])
abline(h =0 )
boxplot(result_q12a[,-1], las = 2)
boxplot(result_q12a[,-1], las = 2)
abline(h =0 )
it = rowMeans(fca_5, na.rm = T)
quantile(it)
quantile(it, na.rm = T)
col_5min
col_30min
col_0min
fc_5_co = rowMeans(log2(q12_sort[,col_5min[1:2]])-log2(q12_sort[,col_0min[1:2]]),  na.rm = T)
fc_30_co = rowMeans(log2(q12_sort[,col_30min[1:2]])-log2(q12_sort[,col_0min[1:2]]),  na.rm = T)
fc_5_sl = rowMeans(log2(q12_sort[,col_5min[5:6]])-log2(q12_sort[,col_0min[5:6]]),  na.rm = T)
fc_30_sl = rowMeans(log2(q12_sort[,col_30min[5:6]])-log2(q12_sort[,col_0min[5:6]]),  na.rm = T)
fc_5_cl = rowMeans(log2(q12_sort[,col_5min[3:4]])-log2(q12_sort[,col_0min[3:4]]),  na.rm = T)
fc_30_cl = rowMeans(log2(q12_sort[,col_30min[3:4]])-log2(q12_sort[,col_0min[3:4]]),  na.rm = T)
result_q12 = data.frame(fname, fc_5, fc_30, fc_5_co, fc_30_co, fc_5_cl, fc_30_cl,fc_5_sl, fc_30_sl)%>%
dplyr::group_by(fname)%>%
dplyr::summarise_if(is.numeric,mean, na.rm = T)
boxplot(result_q12[,-1])
abline(h =0 )
#
boxplot(result_q12[,-1], las = 2)
abline(h =0 )
#
#
boxplot(result_q12[,-1], las = 2)
abline(h =0 , lty = 2)
#
boxplot(result_q12[,-1], las = 2)
abline(h =0 , lty = 2)
#
# fca_30 =log2(q12_sort[,col_30min])-log2(q12_sort[,col_0min])
#
# result_q12a = data.frame(fname, fca_5, fca_30)%>%
#   dplyr::group_by(fname)%>%
#   dplyr::summarise_if(is.numeric,mean, na.rm = T)
#
# boxplot(result_q12a[,-1], las = 2)
# abline(h =0 )
#
# it = rowMeans(fca_5, na.rm = T)
write.table(result_q12, "/Users/Ginny/Google Drive/IR_proteomics/prmQuantResult_20210323.tsv",
quote = F, row.names = F, sep = "\t")
